{"ts":1345160515761,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/* \r\n  Find the sum of all the multiples of 3 or 5 below 1000.\r\n*/\r\nvar one = function() {\r\n    var sum = 0;\r\n    for (var i = 1; i < 1000; i++) {\r\n        if ( i % 3 === 0 || i % 5 === 0 ) {\r\n          sum += i;  \r\n        }\r\n    }\r\n    return sum;\r\n}();\r\nconsole.log(\"1: \" + one );\r\n\r\n/* \r\n  By considering the terms in the Fibonacci sequence whose values do not exceed four million, \r\n  find the sum of the even-valued terms.\r\n*/\r\nvar two = function() {\r\n    var lastFib = 1;\r\n    var fib = 2;\r\n    var sum = 0;\r\n    \r\n    while( fib < 4000000) {\r\n        if( fib % 2 === 0 ) sum += fib;\r\n        fib += lastFib;\r\n        lastFib = fib - lastFib;\r\n    }\r\n    return sum;\r\n}();\r\nconsole.log(\"2: \" + two );\r\n\r\n/*\r\n  Find the largest prime factor of a composite number.\r\n*/\r\nvar three = function() {\r\n    var sum = 0;\r\n\r\n    return sum;\r\n}();\r\nconsole.log(\"3: \" + three);\r\n\r\n\r\n"]],"start1":0,"start2":0,"length1":0,"length2":877}]],"length":877}
{"contributors":[],"silentsave":false,"ts":1345160595953,"patch":[[{"diffs":[[0," = 1"],[-1,";"],[1,","],[0,"\r\n    "],[-1,"var"],[1,"   "],[0," fib = 2"],[-1,";"],[1,","],[0,"\r\n    "],[-1,"var"],[1,"   "],[0," sum"]],"start1":473,"start2":473,"length1":36,"length2":36},{"diffs":[[0,"    var "],[-1,"sum = 0;"],[1,"biggest,\r\n        num = 600851475143,\r\n        sq_num = Math.sqrt(num);\r\n        \r\n        "],[0,"\r\n\r\n    "]],"start1":801,"start2":801,"length1":24,"length2":107},{"diffs":[[0," \r\n\r\n    return "],[-1,"sum"],[1,"biggest"],[0,";\r\n}();\r\nconsole"]],"start1":899,"start2":899,"length1":35,"length2":39}]],"length":964,"saved":false}
